
Str n       := Arr n U8
Ptr of      := @T #ptr { #ty: of }
Arr n of    := @T #arr { #size: n, #ty: of }
V           := @T #void
U8          := @T #int { #bit_width: 8, #signed: false }
U16         := @T #int { #bit_width: 16, #signed: false }
U32         := @T #int { #bit_width: 32, #signed: false }
U64         := @T #int { #bit_width: 64, #signed: false }
Uw          := @T #int { #bit_width: #word, #signed: false }
Uc          := @T #int { #bit_width: #extc, #signed: false }
I8          := @T #int { #bit_width: 8, #signed: true }
I16         := @T #int { #bit_width: 16, #signed: true }
I32         := @T #int { #bit_width: 32, #signed: true }
I64         := @T #int { #bit_width: 64, #signed: true }
Iw          := @T #int { #bit_width: #word, #signed: true }
Ic          := @T #int { #bit_width: #extc, #signed: true }



true := #true
false := #false



xor b1 b2 :=
    neq b1 b2
not b :=
    @case b { true: false, false: true }
eq a b :=
    @case (@cmp #eq a b) { 1: true, 0: false }
neq a b :=
    @case (@cmp #neq a b) { 1: true, 0: false }
